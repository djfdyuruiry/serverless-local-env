###########################################################
#             --- serverless local env ---                #
#                                                         #
# Use the `./up` command to start this environment.       #
#                                                         #
# All data for containers is stored under `.volumes`, to  #
# clear this run 'sudo rm -rf .volumes'.                  #
#                                                         #
# Dependencies will be started automatically when an      #
# individual service is brought up, see 'depends_on'.     #
#                                                         #
# Note: aws is not started automatically by any service   #
# as it requires config added after it starts, which is   #
# destroyed by recreating the container.                  #
#                                                         #
# Use the `./scripts/up-aws.sh` script with the           #
# `--clean-aws` flag instead.                             #
#                                                         #
###########################################################

version: "3"

services:
  #####################
  #    AWS Services   #
  #####################
  aws:
    image: localstack/localstack
    restart: on-failure
    ports:
      - 4567:4567   # API Gateway
      - 4568:4568   # Kinesis
      - 4569:4569   # DynamoDB
      - 4570:4570   # DynamoDB Streams
      - 4571:4571   # Elasticsearch
      - 4572:4572   # S3
      - 4573:4573   # Firehose
      - 4574:4574   # Lambda
      - 4575:4575   # SNS
      - 4576:4576   # SQS
      - 4577:4577   # Redshift
      - 4578:4578   # ES (Elasticsearch Service)
      - 4579:4579   # SES
      - 4580:4580   # Route53
      - 4581:4581   # CloudFormation
      - 4582:4582   # CloudWatch
      - 4583:4583   # SSM
      - 4584:4584   # SecretsManager
      - 4585:4585   # StepFunctions
      - 4586:4586   # CloudWatch Logs
      - 4592:4592   # STS
      - 4593:4593   # IAM
      - 8080:8080   # localstack dashboard
    environment:
      DEFAULT_REGION: eu-west-1
      DATA_DIR: /tmp/localstack/data
      DOCKER_HOST: unix:///var/run/docker.sock
      HOSTNAME: aws
      LAMBDA_DOCKER_NETWORK: serverless-env_default
      LAMBDA_EXECUTOR: docker-reuse
    volumes:
      - ${PWD}/.volumes/localstack:/tmp/localstack/data
      # allow localstack to control docker on this machine by
      # mounting the docker unix socket
      - /var/run/docker.sock:/var/run/docker.sock
  alb:
    build: github.com/djfdyuruiry/lambda-alb.git
    image: lambda-alb
    restart: on-failure
    env_file:
      - ${PWD}/config/aws-config.env
    ports:
      - 9000:8080
    volumes:
      # `config.json` in this directory is generated by 
      # the `scripts/deploy-lambda-functions.sh` script
      - ${PWD}/config/lambda-alb:/etc/lambda-alb
  lambda_logger:
    image: mesosphere/aws-cli
    restart: on-failure
    entrypoint: /opt/serverless/monitor-lambda-logs.sh
    env_file:
      - ${PWD}/config/aws-config.env
    volumes:
      # `config.env` in this directory is generated by 
      # the `scripts/deploy-lambda-functions.sh` script
      - ${PWD}/config/lambda-logger:/etc/serverless
      - ${PWD}/scripts/lambda-logger:/opt/serverless
      - ${PWD}/.volumes/logs/lambda:/var/log/serverless

  ###########
  #   ELK   #
  ###########
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    restart: on-failure
    environment:
      discovery.type: single-node
    volumes:
      - ${PWD}/.volumes/elk/elasticsearch:/usr/share/elasticsearch/data
  logstash:
    image: docker.elastic.co/logstash/logstash:7.0.1
    restart: on-failure
    depends_on:
      - elasticsearch
    volumes:
      - ${PWD}/config/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ${PWD}/.volumes/elk/logstash:/usr/share/logstash/data
  kibana: 
    image: docker.elastic.co/kibana/kibana:7.0.1
    restart: on-failure
    depends_on:
      - elasticsearch
    # kibana needs delayed startup or else it can hang waiting on elastic
    command: /bin/sh -c "sleep 60 && /usr/local/bin/kibana-docker"
    ports:
      - 5601:5601
    volumes:
      - ${PWD}/.volumes/elk/kibana:/usr/share/kibana/data
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.0.1
    restart: on-failure
    depends_on:
      - logstash
    volumes:
      - ${PWD}/config/elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ${PWD}/.volumes/elk/filebeat:/usr/share/filebeat/data
      - ${PWD}/.volumes/logs:/var/log/serverless

  ####################
  #   Mock watcher   #
  ####################
  mock_watcher:
    image: icalialabs/watchman
    restart: on-failure
    entrypoint: /opt/serverless/scripts/watch-mocks.sh
    volumes:
      - ${PWD}/scripts/watchman:/opt/serverless/scripts
      - ${PWD}/mocks:/etc/serverless/mocks
